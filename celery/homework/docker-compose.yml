version: '3.1'

networks:
  dev_network:

services:

  postgre:
    image: postgres:14.3-alpine3.16
    ports:
      - '5431:5432'
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
    networks:
      dev_network:
        aliases:
          - db-postgre

  redis:
    image: redis:7.0.0-alpine3.15
    ports:
      - '6379:6379'
    depends_on:
      - postgre
    networks:
      dev_network:
        aliases:
          - db-redis

  mongo:
    image: mongo:4.4.14
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: test_user_mongo
      MONGO_INITDB_ROOT_PASSWORD: test_password_mongo
    depends_on:
      - redis
    networks:
      dev_network:
        aliases:
          - db-mongo

  app:
    build:
      context: .
    environment:
      PG_DSN: 'postgresql://test_user:test_password@db-postgre:5432/test_db'
      MONGO_DSN: 'mongodb://test_user_mongo:test_password_mongo@db-mongo:27017/files?authSource=admin'
      REDIS_DSN: 'redis://db-redis:6379/1'
    ports:
      - '5000:5000'
    container_name: app
    depends_on:
      - mongo
    networks:
      dev_network:
        aliases:
          - flask
    volumes:
      - ./app:/app

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    environment:
      PG_DSN: 'postgresql://test_user:test_password@db-postgre:5432/test_db'
      MONGO_DSN: 'mongodb://test_user_mongo:test_password_mongo@db-mongo:27017/files?authSource=admin'
      REDIS_DSN: 'redis://db-redis:6379/1'
    container_name: celery
    depends_on:
      - mongo
    networks:
      dev_network:
    volumes:
      - ./app:/app
             